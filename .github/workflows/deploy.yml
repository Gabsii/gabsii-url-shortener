name: Build and Deploy

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BACKUP_PATH: /path/to/backups # Define the backup path as an environment variable

jobs:
  build-and-deploy:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Create pre-deployment Redis backup
        run: |
          docker-compose exec -T redis redis-cli SAVE
          cp /path/to/redis/data/dump.rdb ${{ env.BACKUP_PATH }}/pre_deploy_$(date +%Y%m%d_%H%M%S).rdb

      - name: Deploy
        run: |
          docker-compose pull
          docker-compose down --remove-orphans
          docker-compose up -d

      - name: Verify Redis data
        run: |
          sleep 10  # Give Redis time to start up
          KEYS_COUNT=$(docker-compose exec -T redis redis-cli DBSIZE)
          echo "Redis has $KEYS_COUNT keys after deployment"
          if [ "$KEYS_COUNT" -eq "0" ]; then
            echo "Warning: Redis appears to be empty. Restoring from backup..."
            docker-compose down
            cp ${{ env.BACKUP_PATH }}/pre_deploy_*.rdb /path/to/redis/data/dump.rdb
            docker-compose up -d
          fi
